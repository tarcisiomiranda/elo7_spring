version: '3'

services:

  # Nginx
  web:
    container_name: elo7_nginx
    restart: unless-stopped
    env_file: 
      - ./docker/.env
    image: nginx:latest
    ports:
      - "80:80"
      - "443:443"
    networks:
      elo7-net:
        ipv4_address: 192.168.28.10
    environment:
      - NGINX_CRT:${NGINX_CERTS}
      - NGINX_CFG:${CONFIG_MAIN}
    volumes:
      # - "${NGINX_CFG}:/etc/nginx/conf.d/main.conf"
      # - ${NGINX_CRT}:/etc/nginx/certs
      - ./docker/config/nginx/conf.d/main.conf:/etc/nginx/conf.d/main.conf
      - ./docker/config/nginx/certs/dev:/etc/nginx/certs
      - ./docker/config/nginx/www:/www
      - /etc/localtime:/etc/localtime:ro

  # Springboot
  springboot:
    container_name: elo7_spring
    restart: unless-stopped
    env_file: 
      - ./docker/.env
    image: chephei/spring:1.0
    build:
      context: ./
      dockerfile: ./Dockerfile
    ports:
      - '8081:8080'
      - '5006:5005'
    networks:
      elo7-net:
        ipv4_address: 192.168.28.20
    volumes:
      - ./target/springboot-1.0.1-tarcisio.jar:/app.jar
    environment:
      - SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT:"org.hibernate.dialect.PostgreSQLDialect"
      - SPRING_DATASOURCE_URL:"jdbc:postgresql://db:5432/springboot"
      - SPRING_DATASOURCE_USERNAME:${POSTGRES_USER}
      - SPRING_DATASOURCE_PASSWORD:${POSTGRES_PASSWORD}
      - SPRING-MVC_PATHMATCH_MATCHING-STRATEGY:"ant_path_matcher"
      - SPRING_JPA_HIBERNATE_DDL_AUTO:"update"
    links:
      - db

  # Docker logs Dozzle
  logs:
    container_name: elo7_logs
    restart: unless-stopped
    env_file: 
      - ./docker/.env
    image: amir20/dozzle:latest
    networks:
      elo7-net:
        ipv4_address: 192.168.28.30
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - 9999:1224
    environment:
      - DOZZLE_ADDR=192.168.28.30:1224
      - DOZZLE_BASE=/logs

  # DB
  db:
    container_name: elo7_postgres
    restart: unless-stopped
    env_file: 
      - ./docker/.env
    image: postgres:14.4-alpine
    environment:
      - POSTGRES_USER:${POSTGRES_USER}
      - POSTGRES_PASSWORD:${POSTGRES_PASSWORD}
      - POSTGRES_DB:${POSTGRES_DB}
      - PGDATA:/data/postgres
    volumes:
      - ./docker/data/postgres/springboot.sql:/docker-entrypoint-initdb.d/springboot.sql
    ports:
      - "5432:5432"
    networks:
      elo7-net:
        ipv4_address: 192.168.28.40

  # PgAdmin
  pgadmin:
    container_name: elo7_pgadmin
    restart: unless-stopped
    env_file: 
      - ./docker/.env
    image: dpage/pgadmin4
    environment:
      - PGADMIN_DEFAULT_EMAIL:${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD:${POSTGRES_PASSWORD}
      - PGADMIN_CONFIG_SERVER_MODE:${PGADMIN_CONFIG_SERVER_MODE}
      - SCRIPT_NAME:/pgadmin
    volumes:
      - elo7pgadmin:/var/lib/pgadmin
      - ./docker/config/postgres/servers.json:/pgadmin4/servers.json
    ports:
      - "${PGADMIN_PORT:-10089}:80"
    networks:
      elo7-net:
        ipv4_address: 192.168.28.50

  # Flask
  flask:
    container_name: elo7_flask
    restart: unless-stopped
    image: alpine-flask:latest
    build:
      context: ./docker/data/python
      dockerfile: Dockerfile
    env_file: 
      - ./docker/.env
    user: "${UID}:${GID}"
    volumes:
      - ./docker/data/python:/src/app
    networks:
      elo7-net:
        ipv4_address: 192.168.28.60

# Network config
networks:
  elo7-net:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 192.168.28.0/24

# Volumes em docker
volumes:
    elo7postgres:
    elo7pgadmin:
